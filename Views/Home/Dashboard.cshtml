@using Microsoft.AspNetCore.Identity
@using NovaBugTracker.Models.Enums
@using NovaBugTracker.Services.Interfaces
@model NovaBugTracker.Models.ViewModels.DashboardViewModel


@inject UserManager<BTUser> _userManager
@inject IBTProjectService _projectService
@inject IBTFileService _fileService
@{
	ViewData["Title"] = "Dashboard";
	BTUser user = await _userManager.GetUserAsync(User);
}

<!-- Styles -->
<style>
	.amDark {
		background-color: #30303d;
		color: #fff;
	}

	#chartdiv {
		width: 100%;
		height: 500px;
	}
</style>





<div class="container-fluid dashboard-default-sec">
    <div class="row">
        <div class="col-xl-5 box-col-12 des-xl-100">
            <div class="row">
                <div class="col-xl-12 col-md-6 box-col-6 des-xl-50">
                    <div class="card profile-greeting">
                        <div class="card-body text-center p-t-0">
                            <h2 class="text-success">Wellcome Back, @user.FullName</h2>
                            <br />
                            <h2 class="text-success">Welcome to the @Model.Company!.CompanyName Family! dashboard.</h2>
                        </div>
                        <div class="confetti">
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="confetti-piece"></div>
                            <div class="code-box-copy">
                                <button class="code-box-copy__btn btn-clipboard" data-clipboard-target="#profile-greeting" title="Copy"><i class="icofont icofont-copy-alt"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-6 col-md-3 col-sm-6 box-col-3 des-xl-25 rate-sec">
                    <div class="card income-card card-primary">
                        <a asp-action="AllProjects" asp-controller="Projects" style="text-decoration:none">
                            <div class="card-body text-center">
                                <div class="round-box">
                                    <i data-feather="file-text"></i>
                                </div>
                                <div class="card text-center">
                                    <div class="body">
                                        <div class="p-15 text-light bg-dark">
                                            <h3>@Model.Projects!.Where(p => p.StartDate < DateTime.Now && p.EndDate > DateTime.Now).Count()</h3>
                                            <span>Active Projects</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
                <div class="col-xl-6 col-md-3 col-sm-6 box-col-3 des-xl-25 rate-sec">
                    <div class="card income-card card-secondary">
                        <a asp-controller="Tickets" asp-action="UnassignedTickets">
                            <div class="card-body text-center">
                                <div class="round-box">
                                    <i data-feather="clipboard"></i>
                                </div>
                                <div class="card text-center">
                                    <div class="body">
                                        <div class="p-15 text-light bg-dark">
                                            <h3>@Model.Tickets!.Where(t => string.IsNullOrEmpty(t.DeveloperUserId)).Count()</h3>
                                            <span>Unassigned Tickets</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-7 box-col-12 des-xl-100 dashboard-sec">
            <div class="card income-card">
                <div class="row">
                    <div class="col-6">
                        <div class="card-body">
                            <h5>Tickets by Priority</h5>
                            <!-- Morris: Donut -->
                            <div class="col-md-12">
                                <div id="legend" class="donut-legend" style="font-size:x-small"></div>
                            </div>
                            <div class="col-md-12">
                                <div class="chart chart-md" id="morrisTicketPriority"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card-body">
                            <h5>Tickets by Status</h5>
                            <!-- ChartJS: Pie/Doughnut -->
                            <div class="col-md-12">
                                <!--  Chart.js Canvas Tag -->
                                <canvas id="donutChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xl-8 col-50 box-col-8 des-xl-50">
        <div class="card latest-update-sec">
            <div class="card-header">
                <div class="header-top d-sm-flex align-items-center">
                    <h5>Projects</h5>
                </div>
            </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-striped mb-0" id="datatable-default">
                    <thead>
                        <tr>
                             <th>
                                 Project
                             </th>
                             <th>
                                 Created
                             </th>
                             <th>
                                 Start Date
                             </th>
                             <th>
                                 End Date
                             </th>
                             <th>
                                 Priority
                             </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Projects!)
                        {
                             <tr>
                                  <td>
                                      @Html.DisplayFor(modelItem => item.Name)
                                  </td>
                                  <td>
                                      @Html.DisplayFor(modelItem => item.Created)
                                  </td>
                                  <td>
                                      @Html.DisplayFor(modelItem => item.StartDate)
                                  </td>
                                  <td>
                                      @Html.DisplayFor(modelItem => item.EndDate)
                                  </td>
                                  <td>
                                      @Html.DisplayFor(modelItem => item.ProjectPriority!.Name)
                                  </td>
                             </tr>
                        }
                          </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-4 box-col-4 ">
        <div class="card trasaction-sec">
            <div class="card-header">
                <div class="header-top d-sm-flex align-items-center">
                    <h5>Members</h5>
                </div>
            </div>
            <div class="card-body p-5">
                @foreach (var member in Model.Members!)
                {
                    <ul>
                        <li>@member.FullName</li>
                    </ul>
                }
            </div>
        </div>
    </div>
</div>
               @* <div class="col-xl-12 recent-order-sec">
                    <div class="card">
                        <div class="card-body">
                            <div class="table-responsive">
                                <h5>Tickets</h5>
                    <table class="table table-bordered table-striped mb-0 vertical-scroll scroll-demo" id="datatable-default">
                        <thead>
                            <tr>
                                <th>
                                    Title
                                </th>
                                <th>
                                    Created
                                </th>
                                <th>
                                    Project
                                </th>
                                <th>
                                    Priority
                                </th>
                                <th>
                                    Type
                                </th>
                                <th>
                                    Status
                                </th>
                                <th>
                                    Assigned To
                                </th>
                                <th>
                                    Submitted By
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Tickets!)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Title)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Created)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Project!.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketPriority!.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketType!.Name)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.TicketStatus!.Name)
                                    </td>
                                    <td>
                                        @if (item.DeveloperUserId != null)
                                        {
                                            @item.DeveloperUser!.FullName
                                        }
                                        else
                                        {
                                            <a asp-action="AssignTicketDeveloper" asp-route-id="@item.Id">Assign Developer</a>
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.SubmitterUser!.FullName)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                            </div>
                        </div>
                    </div>
                </div>*@
@section scripts{

    <!--  Plotly Charts  -->
    <!-- Load plotly.js into the DOM -->
    <script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/PlotlyBarChart",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                var data = result;

                var layout = { barmode: 'group' };

                Plotly.newPlot('plotlyChart', data, layout);
            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** Begin AM Charts *** -->
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/4/core.js"></script>
    <script src="https://cdn.amcharts.com/lib/4/charts.js"></script>

    <!-- Chart code -->
    <script>
        $.ajax({
            type: "POST",
            url: "/Home/AmCharts",
            data: '{}',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                am4core.ready(function () {

                    // Themes begin
                    // Themes end

                    // Create chart instance
                    var chart = am4core.create("chartdiv", am4charts.XYChart);


                    // Add data
                    chart.data = result;

                    // Create axes
                    var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());
                    categoryAxis.dataFields.category = "project";
                    categoryAxis.numberFormatter.numberFormat = "#";
                    categoryAxis.renderer.inversed = true;
                    categoryAxis.renderer.grid.template.location = 0;
                    categoryAxis.renderer.cellStartLocation = 0.1;
                    categoryAxis.renderer.cellEndLocation = 0.9;

                    var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());
                    valueAxis.renderer.opposite = true;

                    // Create series
                    function createSeries(field, name) {
                        var series = chart.series.push(new am4charts.ColumnSeries());
                        series.dataFields.valueX = field;
                        series.dataFields.categoryY = "project";
                        series.name = name;
                        series.columns.template.tooltipText = "{name}: [bold]{valueX}[/]";
                        series.columns.template.height = am4core.percent(100);
                        series.sequencedInterpolation = true;

                        var valueLabel = series.bullets.push(new am4charts.LabelBullet());
                        valueLabel.label.text = "{valueX}";
                        valueLabel.label.horizontalCenter = "left";
                        valueLabel.label.dx = 10;
                        valueLabel.label.hideOversized = false;
                        valueLabel.label.truncate = false;

                        var categoryLabel = series.bullets.push(new am4charts.LabelBullet());
                        categoryLabel.label.text = "{name}";
                        categoryLabel.label.horizontalCenter = "right";
                        categoryLabel.label.dx = -10;
                        categoryLabel.label.fill = am4core.color("#fff");
                        categoryLabel.label.hideOversized = false;
                        categoryLabel.label.truncate = false;
                    }

                    createSeries("tickets", "Tickets");
                    createSeries("developers", "Devs");

                }); // end am4core.ready()


            },
            failure: function (result) {
                alert(result.d);
            },
            error: function (result) {
                alert(result.d);
            }
        });
    </script>

    <!-- *** End AM Charts *** -->
    <!-- *** Begin Chart JS Pie/Donut *** -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.6.0/dist/chart.min.js"></script>
    <script>

        var donutChartCanvas = $('#donutChart').get(0).getContext('2d');
        var donutData = {
            labels: [
                '@nameof(BTTicketStatuses.Development)',
                '@nameof(BTTicketStatuses.New)',
                '@nameof(BTTicketStatuses.Resolved)',
                '@nameof(BTTicketStatuses.Testing)'
            ],
            datasets: [
                {
                    data: [
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name == nameof(BTTicketStatuses.Development)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.New)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.Resolved)).Count(),
        @Model.Tickets!.Where(t=> t.TicketStatus!.Name ==nameof(BTTicketStatuses.Testing)).Count()
                                ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)'
                    ]
                }
            ]
        };

        var donutOptions = {
            maintainAspectRatio: false,
            responsive: true,
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        new Chart(donutChartCanvas, {
            type: 'doughnut',
            data: donutData,
            options: donutOptions
        });
    </script>
    <!-- *** End Chart JS Donut *** -->
    @* Morris Donut Chart *@
    <script src="//cdnjs.cloudflare.com/ajax/libs/raphael/2.1.0/raphael-min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/morris.js/0.5.1/morris.min.js"></script>
    <script>

        var morrisDonutData = [{
            label: "Low",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Low)).Count()
                    }, {
            label: "Medium",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Medium)).Count()
                    }, {
            label: "High",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.High)).Count()
                    }, {
            label: "Urgent",
            value: @Model.Tickets!.Where(t=>t.TicketPriority!.Name == nameof(BTTicketPriorities.Urgent)).Count()
                    }];


        /*
        Morris: Donut
        */
        if ($('#morrisTicketPriority').get(0)) {
            var donutChart = Morris.Donut({
                resize: true,
                element: 'morrisTicketPriority',
                data: morrisDonutData,
                colors: ['#0088cc', '#734ba9', '#E36159', '#ff993b']
            });

            donutChart.options.data.forEach(function (label, i) {
                var legendItem = $('<span></span>').text(label['label'] + ": " + label['value']).prepend('<span>&nbsp;</span>');
                legendItem.find('span')
                    .css('backgroundColor', donutChart.options.colors[i])
                    .css('width', '20px')
                    .css('display', 'inline-block')
                    .css('margin', '10px');
                $('#legend').append(legendItem)
            });
        };
    </script>

    <!--Google Charts-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>

    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //3D Pie
                    var options = {
                        title: 'Project Priority',
                        is3D: true,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }

                    };

                    var chart = new google.visualization.PieChart($("#chart3D")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
        google.setOnLoadCallback(drawChart);
        function drawChart() {
            $.ajax({
                type: "POST",
                url: "/Home/GglProjectPriority",
                data: '{}',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (result) {
                    var data = google.visualization.arrayToDataTable(result);

                    //Donut
                    var options = {
                        title: 'Company Ticket Distribution',
                        pieHole: 0.3,
                        chartArea: { left: 0, bottom: 15, width: '100%', height: '100%' },
                        legend: { position: 'bottom' }
                    };
                    var chart = new google.visualization.PieChart($("#donut")[0]);
                    chart.draw(data, options);
                },
                failure: function (rresult) {
                    alert(result.d);
                },
                error: function (result) {
                    alert(result.d);
                }
            });
        }
    </script>

						}
